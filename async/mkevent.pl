#!/usr/bin/perl
use strict;

##
## This is a script that autogerates the file mkevent.h -- the header file
## of tame autogenerated template classes.
##

my $N_tv = 3;
my $N_wv = 3;

sub mklist ($$)
{
    my ($tmplt, $n) = @_;
    my @out;
    for (my $i = 1; $i <= $n; $i++) {
	my $a = $tmplt;
	$a =~ s/%/$i/g;
	push @out, $a;
    }
    return @out
}

sub mklist_multi (@)
{
    my @arr;
    foreach my $e (@_) {
	if (ref ($e)) {
	    push @arr, mklist ($e->[0], $e->[1]);
	} else {
	    push @arr, $e;
	}
    }
    return @arr;
}

sub commafy {
    return join (", " , @_);
}

sub arglist (@)
{
    return commafy (mklist_multi (@_));
}

sub do_mkevent_cb ($$)
{
    my ($t, $w) = @_;
    print "template<" , arglist (["class W%", $w], ["class T%", $t]) , "> ";
    print "void\n";
    print ("_mkevent_cb_${w}_${t} (",
	   arglist ("ptr<closure_t> hold",
		    "ptr<joiner_t<" . arglist (["W%", $w]) . "> > j",
		    "refset_t<" . arglist (["T%", $t]) . "> rs",
		    "value_set_t<" . arglist (["W%", $w]) . "> w",
		    ["T% t%", $t]
		    ),
	   ")\n"
	   );
		
    print "{\n";
    print "  rs.assign (" . arglist (["t%", $t]) . ");\n";
    print "  j->join (w);\n";
    print "}\n\n";
}

sub do_mkevent ($$)
{
    my ($t, $w) = @_;
    print "template<" , arglist (["class W%", $w], ["class T%", $t]) , ">\n";
    print "typename callback<", arglist ("void", ["T%", $t])  , ">::ref\n";
    print ("_mkevent (" , 
	   arglist ("ptr<closure_t> c",
		    "const char *loc",
		    "rendezvous_t<" . arglist (["W%", $w]) . ">",
		    ["const W% &w%", $w],
		    ["T% &t%", $t]
		    ),
	   ")\n"
	   );
    print "{\n";
    print "  g.launch_one (c);\n";
    my @args = ("_mkevent_cb_${w}_${t}<" . arglist (["W%", $w], ["T%", $t])
		. ">",
		"c",
		"g.make_joiner (loc)",
		"refset_t<" . arglist (["T%", $t]) . ">" 
		. " (" . arglist (["t%", $t]) . ")" ,
		"value_set_t<" . arglist (["W%", $w]) . ">"
		. " (" . arglist (["w%", $w]) . ")");
    print "  return wrap (" . join (",\n               ", @args). ")\n";
    print "}\n\n";
}

sub dodump ($$)
{
    my ($t, $w) = @_;
    do_mkevent_cb ($t, $w);
    do_mkevent ($t, $w);
}


print <<EOF;
// -*-c++-*-
//
// Autogenerated by mkevent.pl
//

#ifndef _ASYNC_MKEVENT_H_
#define _ASYNC_MKEVENT_H_
EOF


for (my $i = 0; $i <= $N_tv; $i++) {
    for (my $j = 0; $j <= $N_wv; $j++) {
	dodump ($i, $j);
    }
}

print <<EOF;
#endif // _ASYNC_MKEVENT_H_ 
EOF
